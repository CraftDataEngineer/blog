<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://www.enovat.fr/blog</id>
    <title>Enovat Blog</title>
    <updated>2023-02-23T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://www.enovat.fr/blog"/>
    <subtitle>Enovat Blog</subtitle>
    <icon>https://www.enovat.fr/img/logo.png</icon>
    <entry>
        <title type="html"><![CDATA[Documenter sa base de donn√©e]]></title>
        <id>/2023/02/23/documenter-sa-base</id>
        <link href="https://www.enovat.fr/blog/2023/02/23/documenter-sa-base"/>
        <updated>2023-02-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Objectifs :]]></summary>
        <content type="html"><![CDATA[<h2 id="objectifs-">Objectifs :</h2><ul><li>Comprendre l'importance de documenter sa bdd</li><li>Les commentaires sur les objets en base</li><li>Analyseur de m√©tadonn√©es pour documenter notre SGBD </li><li>Comment industrialiser sa documentation</li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/schemaspy_acceuil-62f5cc68ca7be43845beadcf16b3a2db.png" width="1538" height="1056"></p><hr><h2 id="pourquoi">Pourquoi</h2><p>La <strong>documentation</strong> d'une base de donn√©es est importante pour plusieurs raisons :</p><ol><li><p><code>Comprendre la structure</code> : Elle aide les d√©veloppeurs et les administrateurs √† comprendre la structure de la base,
les tables, les colonnes et les relations entre elles.</p></li><li><p><code>Collaboration</code> : Elle facilite la collaboration entre les d√©veloppeurs et les administrateurs en fournissant une
description claire et concise de la structure de la base.</p></li><li><p><code>Maintenance</code> : Elle aide √† identifier et √† corriger les erreurs dans la structure de la base, ce qui peut r√©duire
le temps de maintenance et les co√ªts associ√©s.</p></li><li><p><code>Transparence</code> : Elle aide √† garantir la transparence de la structure de la base et √† fournir une vue d'ensemble de
son fonctionnement pour les audits et les examens de s√©curit√©.</p></li><li><p><code>Mise √† jour et √©volution</code> : La documentation peut aider √† planifier les mises √† jour et les √©volutions de la base
en fournissant une vue d'ensemble de sa structure actuelle.</p></li></ol><hr><h2 id="les-commentaires-sur-les-objets-de-base-de-donn√©es">Les commentaires sur les objets de base de donn√©es</h2><p>Les commentaires sur les objets de base de donn√©es sont des descriptions ou des annotations que l'on peut ajouter √† des
√©l√©ments tels que des tables, des colonnes, des vues, des proc√©dures stock√©es, etc‚Ä¶<br>
<!-- -->Ils fournissent des informations suppl√©mentaires sur l'objet, telles que son but, ses limites,
ses exigences, etc. Ils peuvent √©galement aider √† la compr√©hension du code, √† la documentation et √† la collaboration.   </p><p>La mani√®re de cr√©er et de g√©rer des commentaires sur les objets de base de donn√©es d√©pend du syst√®me de gestion de base
de donn√©es (SGBD) utilis√©. Par exemple, pour ajouter un commentaire √† une table dans MySQL, vous pouvez utiliser la
commande ALTER TABLE :</p><pre><code class="language-sql">ALTER TABLE table_name COMMENT 'description de la table';
</code></pre><p>Dans Oracle et Postgres, vous pouvez utiliser la commande COMMENT suivie du nom de l'objet et du commentaire souhait√©:</p><pre><code class="language-sql">COMMENT ON TABLE table_name IS 'description de la table';
</code></pre><p>Les commentaires sur les objets de base de donn√©es peuvent √™tre consult√©s √† l'aide de commandes sp√©cifiques pour chaque
SGBD ou √† l'aide d'outils comme : <code>phpMyAdmin</code>, <code>Oracle SQL Developer</code>,
<code>Microsoft SQL Server Management Studio</code>, etc.</p><h2 id="analyseur-de-m√©tadonn√©es">Analyseur de m√©tadonn√©es</h2><p>Utiliser un analyseur de m√©tadonn√©es pour documenter notre SGBD peut √™tre tr√®s b√©n√©fique pour plusieurs raisons :</p><ol><li><p><code>Documentation exhaustive</code> : Il permet d'extraire des informations sur la structure, les relations,  types de donn√©es, index et contraintes de la base de donn√©es.
On peut utiliser ces informations, pour g√©n√©rer une documentation qui fournit une image compl√®te de notre sch√©ma.
</p></li><li><p><code>Gain de temps</code> : La documentation manuelle d'une base de donn√©es peut √™tre une t√¢che <strong>chronophage</strong>, en particulier
pour les bases de donn√©es <strong>volumineuses</strong> et <strong>complexes</strong>. L'utilisation d'un analyseur de m√©tadonn√©es peut
permettre de gagner du temps et des efforts en <strong>g√©n√©rant automatiquement</strong> la documentation.</p></li><li><p><code>Pr√©cision</code> : Il permet d'extraire des informations pr√©cises et fiables sur la base de donn√©es.</p></li><li><p><code>Standardisation</code> : Son utilisation garantit que la documentation est normalis√©e et
coh√©rente sur l'ensemble de la base de donn√©es, ce qui la rend plus facile √† comprendre et √† maintenir.</p></li><li><p><code>Communication</code> : La documentation g√©n√©r√©e par un analyseur de m√©tadonn√©es peut √™tre utilis√©e pour communiquer la
structure et le contenu de la base de donn√©es aux parties prenantes, notamment les d√©veloppeurs, les testeurs, les analystes m√©tier et les autres membres de l'√©quipe.</p></li></ol><p>Dans l'ensemble, l'utilisation d'un analyseur de m√©tadonn√©es de notre SGBD peut nous aider √† mieux comprendre, g√©rer et
communiquer les informations sur nos bases de donn√©es, ce qui peut conduire √† une am√©lioration de l'efficacit√©,
de la pr√©cision et de la productivit√©.</p><h2 id="comment-industrialiser-sa-documentation">Comment industrialiser sa documentation</h2><p>Dans cette section, nous allons explorer comment industrialiser la g√©n√©ration de documentation sur vos SGBD en utilisant <code>SchemaSpy</code> comme analyseur de m√©tadonn√©es et <code>GitlabCI</code> comme outil de CI.</p><p>Une fois que vous avez install√© <code>SchemaSpy</code> en local, vous pouvez g√©n√©rer de la documentation sur vos SGBDs.
La documentation g√©n√©r√©e sera sous forme de fichiers statiques <code>HTML</code>, <code>CSS</code> et <code>JS</code>.</p><blockquote><p>Suivre le guide d'installation : <a href="https://schemaspy.readthedocs.io/en/latest/installation.html">https://schemaspy.readthedocs.io/en/latest/installation.html</a></p></blockquote><p>Dans dans cette section, nous nous concentrerons sur la fa√ßon d'industrialiser cette documentation dans une <code>CI</code> üöÄ. </p><p><strong>Avant de commencer, il est important de se poser les questions suivantes :</strong></p><ul><li>Sur quel environnement voulez-vous g√©n√©rer votre documentation : <code>Dev</code>, <code>Staging</code>, <code>Prod</code> ?</li><li>Comment SchemaSpy acc√®de-t-il aux m√©tadonn√©es de votre base de donn√©es cible ? <code>En direct</code> ?</li><li>Sur quel service d'h√©bergement souhaitez-vous d√©ployer votre documentation ? <code>Gitlab/Github Pages</code>, <code>Netlify</code>, <code>AWS S3</code> ?</li><li>Voulez-vous versionner cette documentation ? Via <code>Git</code>, sauvegarde d'<code>artefacts</code> dans une CI...?</li></ul><p><strong>Dans cet exemple, nous allons industrialiser la g√©n√©ration de documentation avec le contexte suivant :</strong></p><ul><li>Pas d'environnement sp√©cifique</li><li>Simulation de restauration gr√¢ce √† un script charg√© au d√©marrage d'un service postgres dans notre CI</li><li>Connexion de SchemaSpy au service Postgres et g√©n√©ration de la documentation</li><li>Exposition de la doc' sur Gitlab Pages.</li><li>Sauvegarde des documentations sur les artifacts de gitlab, les anciennes versions sont disponibles sur ce service</li></ul><p>Passons au code, tout d'abord il va nous falloir le script sql qui va nous permettre de simuler la restauration d'une
base de donn√©es : (fichier qu'on nommera <code>initdb/init-db.sql</code>)</p><pre><code class="language-sql">CREATE TYPE sexe AS ENUM ('AUTRE', 'FEMME', 'HOMME');
CREATE TABLE ville
(
    id        VARCHAR UNIQUE PRIMARY KEY,
    nom       VARCHAR NOT NULL,
    longitude NUMERIC NOT NULL,
    latitude  NUMERIC NOT NULL,
    UNIQUE (nom, latitude)
);

CREATE TABLE utilisateur
(
    id       VARCHAR UNIQUE PRIMARY KEY,
    prenom   VARCHAR                 NOT NULL,
    nom      VARCHAR                 NOT NULL,
    age      VARCHAR                 NOT NULL,
    ville_id VARCHAR                 NOT NULL REFERENCES ville (id),
    sexe     sexe NOT NULL
);

COMMENT ON COLUMN utilisateur.prenom is 'Est le prenom de l utilisateur';
COMMENT ON COLUMN utilisateur.nom is 'Est le nom de naissance de l utilisateur';
COMMENT ON COLUMN utilisateur.age is 'Est l age de l utilisateur';
COMMENT ON COLUMN utilisateur.ville_id is 'Est la cl√© primaire qui fait r√©f√©rence √† la ville o√π l utilisateur habite';
COMMENT ON COLUMN utilisateur.sexe is 'Est le sexe de l utilisateur de type sexe';

INSERT INTO ville (id, nom, longitude, latitude)
VALUES ('c4e5fcc2-ab73-11ed-afa1-0242ac120002', 'Paris', 2.333333, 48.86);

INSERT INTO utilisateur (id, prenom, nom, age, ville_id, sexe)
VALUES ('f43692ad-9f11-4ce2-8d21-078e79ea21a3', 'Lo√Øc', 'cam', 28, 'c4e5fcc2-ab73-11ed-afa1-0242ac120002', 'HOMME');
</code></pre><p>Une fois le fichier sql √©crit et mis dans un dossier au niveau de la racine √† l'emplacement : <code>initdb/init-db.sql</code>
Nous pouvons passer √† l'√©criture de notre pipeline : </p><pre><code class="language-yaml">stages:
    - Documentation

pages:
    image: openjdk:8-jdk-alpine
    services:
        - name: postgres:14.0
          alias: postgres
    variables:
        POSTGRES_DB: dataguru
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: $CI_POSTGRES_PASSWORD
    stage: Documentation
    script:
        - apk add postgresql-client
        - apk update &amp;&amp; apk add graphviz ttf-dejavu wget
        - wget https://github.com/schemaspy/schemaspy/releases/download/v6.1.0/schemaspy-6.1.0.jar -P /schemaspy
        - export PGPASSWORD=$POSTGRES_PASSWORD
        - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -f ./initdb/init-db.sql
        - wget https://jdbc.postgresql.org/download/postgresql-42.3.0.jar -P /drivers_inc/
        - java -jar /schemaspy/schemaspy-6.1.0.jar -t pgsql -db "$POSTGRES_DB" -host "postgres" -port 5432 -s public -u "$POSTGRES_USER" -p "$POSTGRES_PASSWORD" -o ./public -dp /drivers_inc/postgresql-42.3.0.jar
    artifacts:
        expire_in: '2 weeks'
        paths:
          - public/
</code></pre><blockquote><p>‚ö†Ô∏è La pipeline actuelle n'est pas optimis√©e et ne suit pas les bonnes pratiques.
Une solution possible serait de cr√©er une image Docker qui contiendrait toutes les d√©pendances n√©cessaires pour g√©n√©rer la documentation. Cette approche permettrait de simplifier et d'am√©liorer la rapidit√© de la pipeline. </p></blockquote><p>Workflow d'ex√©cution de la pipeline : </p><p><img loading="lazy" alt="img.png" src="/assets/images/pipeline_gitlab-42f27d0fe1413e3b462ba1de3d29a91d.png" width="552" height="209"></p><p>Et votre documentation sera accessible : <code>https://username.gitlab.io/repo_name/</code></p><p><img loading="lazy" alt="img.png" src="/assets/images/schemaspy_relation-4ce4eb6d6f7f25a55914cec4adbeb68f.png" width="1053" height="606"></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Loi de Conway]]></title>
        <id>/2023/02/16/loi-de-conway</id>
        <link href="https://www.enovat.fr/blog/2023/02/16/loi-de-conway"/>
        <updated>2023-02-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[En 1968, Melvin Conway a publi√© un article intitul√© "How Do Committees Invent ?"  [1]  dans lequel il examine la relation entre la structure d'une organisation et la conception d'un syst√®me. Il est devenu c√©l√®bre pour avoir formul√© ce qui est maintenant connu sous le nom de loi de Conway :]]></summary>
        <content type="html"><![CDATA[<p>En 1968, Melvin Conway a publi√© un article intitul√© <strong>"How Do Committees Invent ?"</strong>  <a href="https://www.melconway.com/Home/Committees_Paper.html">[1]</a>  dans lequel il examine la relation entre la structure d'une organisation et la conception d'un syst√®me. Il est devenu c√©l√®bre pour avoir formul√© ce qui est maintenant connu sous le nom de <strong>loi de Conway</strong> :</p><blockquote><p> <strong>Toute organisation qui con√ßoit un syst√®me, au sens large, concevra une structure qui sera la copie de la structure de communication de l‚Äôorganisation.</strong></p></blockquote><p><img loading="lazy" alt="img.png" src="/assets/images/conway-311ebc5f15ff313c8915ea790dc5ebb8.png" width="1208" height="626"></p><p><strong>Conway's Law</strong> Martin Fowler <a href="https://martinfowler.com/bliki/ConwaysLaw.html">[2]</a></p><p>Pendant la conception d'un syst√®me, son architecture a de fortes chances de ressembler √† l‚Äôorganisation de l'√©quipe qui l'a con√ßue.
Si l'on consid√®re trois √©quipes travaillant sur le d√©veloppement d'une m√™me solution, il est fort probable que la base de code soit divis√©e en trois sous-parties distinctes.</p><p>Alan MacCormack, John Rusnak, et Carliss Baldwin essaient de prouver cette corr√©lation dans leur recherche intitul√©e
<strong> Exploring the Structure of Complex Software Designs: An Empirical Study of Open Source and Proprietary Code</strong> <a href="https://www.researchgate.net/publication/220534289_Exploring_the_Structure_of_Complex_Software_Designs_An_Empirical_Study_of_Open_Source_and_Proprietary_Code">[3]</a>.</p><p>En utilisant le <strong>DSM (Design Structure Matrix)</strong> <a href="https://www.idp-innovation.com/design-structure-matrix-dsm-modeliser-la-complexite-en-developpement-de-produits/">[4]</a>
, un outil qui vise √† mod√©liser la complexit√© d'un syst√®me en examinant ses d√©pendances.</p><p><strong>Exemple d‚Äôun matrice DSM</strong></p><p><img loading="lazy" alt="img.png" src="/assets/images/dsm-e18965daf202cfcb555b09099c54bd66.png" width="612" height="542"></p><p>Ils analysent la base de code de <code>Linux</code> et <code>Mozilla</code> et obtienne les r√©sultats suivants :</p><ul><li><p>Le projet Linux, qui est un projet <strong>open source</strong> con√ßu pour la collaboration <strong>d√©centralis√©e</strong> entre des personnes du monde entier, a une <strong>architecture modulaire</strong>.</p></li><li><p>Le navigateur Netscape, avant son passage en open source sous le nom de Mozilla et qui √©tait g√©r√© de <strong>mani√®re propri√©taire</strong> par une √©quipe interne, avait une <strong>architecture fortement coupl√©e</strong>.</p></li><li><p>Apr√®s son passage en open source, Mozilla a subi une refactorisation globale pour devenir plus modulaire et moins coupl√© que Linux !</p></li></ul><p>Leur √©tude met en lumi√®re l'influence de l'organisation des √©quipes sur la modularit√© du code. La collaboration distribu√©e inh√©rente √† l'open source encourage la conception d'une architecture de code plus modulaire, avec une faible interd√©pendance entre les diff√©rents √©l√©ments.</p><p>Il est crucial de consid√©rer la structure de l'√©quipe lors de la conception d'une architecture. Ignorer la structure organisationnelle peut mener √† des divergences significatives par rapport au design initial.</p><h2 id="conway-invers√©">Conway invers√©</h2><p>Dans son talk "Microservices and the Inverse Conway Manoeuvre", James Lewis pr√©sente une approche appel√©e  "Conway invers√©"  qui consiste √† organiser l'√©quipe de mani√®re √† atteindre l'architecture d√©sir√©e.</p><div><iframe width="100%" height="400" src="https://www.youtube.com/embed/CsZDGlz7O5w" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"></iframe></div><hr><p>Une technique largement employ√©e par les <strong>entreprises performantes</strong> actuelles, qui augmente les chances de d√©velopper des <strong>solutions efficaces</strong> et maintenables de mani√®re naturelle.</p><p>Pour cr√©er une architecture modulaire compos√©e de plusieurs domaines distincts, il est pr√©f√©rable de former une √©quipe pour chaque domaine sp√©cifique. Cela permettra de progresser naturellement vers l'objectif final envisag√©.</p><h2 id="conclusion">Conclusion</h2><p>De nombreuses organisations continuent de rencontrer des difficult√©s pour mettre en place des architectures innovantes, souvent pour de mauvaises raisons.</p><p>En effet, travailler sur le cloud tout en conservant une organisation cloisonn√©e ne va pas forc√©ment vous aider √† r√©duire votre lead time.</p><p>La loi de Conway nous rappelle une v√©rit√© simple: si la structure de l'organisation ne correspond pas √† l'architecture souhait√©e, l'adoption des derni√®res tendances technologiques ne suffira pour atteindre les r√©sultats escompt√©s.</p><p>Et comme le dit si bien  <strong>Ryth Malan</strong> :</p><blockquote><p>Si l'architecture du syst√®me et l'architecture de l'organisation sont en d√©saccord, l'architecture de l'organisation l'emporte.</p></blockquote>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Terraform - Concept & Workflow]]></title>
        <id>/2022/11/01/terraform-concepts-et-workflow</id>
        <link href="https://www.enovat.fr/blog/2022/11/01/terraform-concepts-et-workflow"/>
        <updated>2022-11-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Objectifs :]]></summary>
        <content type="html"><![CDATA[<h2 id="objectifs-">Objectifs :</h2><ul><li>Comprendre les concepts : <code>Terraform core</code> &amp; <code>Terraform plugin</code></li><li>Connaitre les diff√©rents workflows de Terraform</li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/terraform_orchestrateur-ad503d8eb2b76416b03d39b1917fe329.png" width="1005" height="516"></p><hr><h2 id="rappels--101-terraform">Rappels : 101 Terraform</h2><p>Terraform est un <strong>projet open source</strong> cr√©√© en <strong>2014</strong> par <a href="https://www.hashicorp.com/">Hashicorp</a>.</p><p>A l'√©criture de ce blog, Terraform a :</p><ul><li><code>35K</code> ‚≠êÔ∏è</li><li>Plus de <code>30k commits</code></li><li>Plus de <code>1600 contributeurs</code></li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/terraform_github-76aedb9cfc1b6c8bf686ab6db814208d.png" width="1538" height="755">
<em><a href="https://github.com/hashicorp/terraform">https://github.com/hashicorp/terraform</a></em></p><p><strong>Ce qu'on peut faire avec Terraform :</strong></p><ul><li>G√©rer des ressources d'infrastructure de plusieurs <strong>fournisseurs cloud</strong><ul><li>Cr√©er une infrastructure r√©seau sur AWS</li><li>D√©ployer un cluster Kubernetes sur GCP</li></ul></li><li>Int√©ragir avec des <strong>produits d'infrastructure</strong><ul><li>Ins√©rer des secrets dans un Vault </li><li>D√©ployer une application sur Heroku</li></ul></li><li>Configurer des <strong>services d‚Äôinfrastructure</strong><ul><li>Cr√©er un projet/groupe/utilisateur sur GitLab</li><li>Initialiser une base de donn√©es PostgreSQL (et ses utilisateurs)</li></ul></li></ul><hr><h2 id="les-concepts--terraform-core--terraform-plugin">Les concepts : Terraform Core &amp; Terraform Plugin</h2><p>Terraform a la capacit√© de se <strong>brancher</strong> avec de <strong>nombreux providers</strong> : <em>AWS, GCP, AZURE, ELASTIC...</em> <em>Mais le fonctionnement interne de terraform ne change pas entre 2 providers.</em></p><p>Pour cela, Terraform est compos√© de <strong>2 parties</strong> <em>(s√©par√©es par un contrat d'interface)</em> :</p><ul><li><p><strong>Terraform Core :</strong> Il s'agit du binaire Terraform qui communique avec les plugins pour g√©rer les ressources de l'infrastructure.
Il fournit une interface commune qui vous permet de tirer parti de nombreux fournisseurs
de Clouds, bases de donn√©es, services et solutions internes.</p></li><li><p><strong>Terraform Plugin :</strong> Il s'agit de binaires ex√©cutables √©crits en Go qui communiquent avec Terraform Core via une interface RPC. Chaque plugin expose une impl√©mentation pour un service sp√©cifique, tel que le fournisseur AWS ou le
fournisseur cloud-init. </p></li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/terraform_core_plugin-82e1fa4e71a1a3b0541b55c32f2f0055.png" width="983" height="182"></p><p>Actuellement, Terraform ne supporte qu'un seul type de plugin appel√© <strong><a href="https://developer.hashicorp.com/terraform/language/providers">Providers</a></strong>.<br>
<!-- -->Vous pouvez retrouver la liste en suivant le lien : <a href="https://registry.terraform.io/browse/providers">https://registry.terraform.io/browse/providers</a></p><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Des plugins custom</h5></div><div class="admonition-content"><p>On peut √©galement d√©velopper nos propres providers, Terraform propose un tutoriel : <a href="https://developer.hashicorp.com/terraform/tutorials/providers-plugin-framework/providers-plugin-framework-provider">Implement a Provider with the Terraform Plugin Framework</a></p></div></div><h2 id="cin√©matique-g√©n√©rale-de-terraform">Cin√©matique g√©n√©rale de Terraform</h2><ol><li>Le d√©veloppeur(se) üßëüèª‚Äçüíª <strong>d√©veloppe</strong> le code Terraform</li><li>Le d√©veloppeur(se) üßëüèª‚Äçüíª <strong>ex√©cute</strong> des commandes Terraform</li><li>Terraform lit la <strong>configuration</strong> (code) ainsi que le <strong>fichier d'√©tat</strong> **</li><li>Terraform cr√©e un <strong>plan d'ex√©cution</strong> : arbre de d√©pendances </li><li>Terraform communique avec les APIs du provider pour <strong>appliquer les changements</strong></li></ol><div class="admonition admonition-tip alert alert--success"><div class="admonition-heading"><h5><span class="admonition-icon"><svg xmlns="http://www.w3.org/2000/svg" width="12" height="16" viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Fichier d'√©tat</h5></div><div class="admonition-content"><p> ** <strong>Le fichier d'√©tat</strong> est utilis√© par Terraform pour faire correspondre les <strong>ressources du monde r√©el</strong> √† votre <strong>configuration</strong> et conserver la trace des m√©tadonn√©es.</p></div></div><p><img loading="lazy" alt="img.png" src="/assets/images/cin√©matique_terraform-9c69b0517494a55fb4cbbb7f3ebdea49.png" width="1609" height="562"></p><h2 id="les-workflows-terraform">Les workflows Terraform</h2><p>Dans cette section nous allons voir les diff√©rents workflow Terraform : </p><ul><li><code>Workflow standard</code></li><li><code>Workflow lors d'une cr√©ation d'infrastructure</code></li><li><code>Workflow lors d'une mise √† jour d'infrastructure</code></li></ul><h3 id="workflow-standard">Workflow standard</h3><hr><blockquote><p>Pour mettre en place notre <strong><a href="https://en.wikipedia.org/wiki/Working_directory">working directory</a></strong> il faut lancer la commande suivante :</p><ul><li><code>terraform init</code> </li></ul><p>‚ö†Ô∏è A chaque ajout de nouveau <a href="https://developer.hashicorp.com/terraform/language/modules/syntax">module</a> ou de provider il faudra, re-lancer cette commande.</p></blockquote><p>Une fois l'initialisation faite, le worklow standard pour d√©velopper du Terraform peut se r√©sumer en <strong>3 √©tapes</strong> :</p><ol><li><code>terraform plan</code> : <strong>Afficher</strong> les changements requis par la configuration actuelle <em>(plan d'ex√©cution)</em></li><li><code>terraform apply</code> : <strong>Appliquer</strong> le plan d'ex√©cution sur l'infrastructure r√©elle.</li><li><code>terraform destroy</code> : <strong>Supprimer</strong> toute l'infrastructure cr√©e avec Terraform </li></ol><blockquote><p>üí° Une fois qu'on a d√©velopp√© notre code Terraform, on peut le <strong>v√©rifier</strong> avec la commande :
<code>terraform validate</code> avant m√™me de lancer la commande <code>terraform plan</code> pour avoir un feedback plus rapide.</p></blockquote><p><img loading="lazy" alt="img.png" src="/assets/images/standard_workflow-2756b41fb4686a55da2be880d9bf3b6f.png" width="1487" height="574"></p><p>Pour aller plus loin : <a href="https://developer.hashicorp.com/terraform/intro/core-workflow">The Core Terraform Workflow</a></p><h3 id="workflow-lors-dune-cr√©ation-dinfrastructure">Workflow lors d'une cr√©ation d'infrastructure</h3><hr><p>Pour la premi√®re ex√©cution de la commande <code>terraform apply</code> : </p><ul><li>Terraform cr√©e <strong>l'infrastructure</strong> d√©finie dans votre configuration (code terraform).</li><li>Terraform cr√©e le <strong>fichier d'√©tat</strong> : <code>tfstate</code>.  </li></ul><p><img loading="lazy" alt="img.png" src="/assets/images/workflow_creation-a8da6624918444e2c58e0710d9afb2f6.png" width="1560" height="446"></p><h3 id="workflow-lors-dune-mise-√†-jour-dinfrastructure">Workflow lors d'une mise √† jour d'infrastructure</h3><hr><ol><li><code>R√©cup√©ration du tfstate</code> :  r√©cup√©rer le dernier √©tat mis √† jour par Terraform.</li><li><code>R√©cup√©ration des √©tats r√©els</code> : r√©cup√©rer les √©ventuels changements d'infrastructure, externe √† Terraform (modification √† la main).</li><li><code>Application des diff√©rences</code> : cr√©er un plan d'ex√©cution et appliquer ces changements sur l'infrastructure r√©elle.</li><li><code>Mise √† jour du tfstate</code> :  mettre √† jour le tfstate avec l'infrastructure actuelle.</li></ol><p><img loading="lazy" alt="img.png" src="/assets/images/workflow_mise_a_jour-f6c8f96afda787a9bf4426ce7ac13ca6.png" width="1392" height="525"></p><h2 id="conclusion">Conclusion</h2><p>Pour aller plus loin, dans le prochain article nous expliquerons en d√©tail le <strong>fichier d'√©tat</strong>.    </p><p>Et pour ceux qui souhaitent creuser les notions <code>Terraform Core</code> et <code>Terraform Plugin</code> on vous recommande la vid√©o :
<a href="https://www.youtube.com/watch?v=oNHABU-8xfs&amp;t=400s">Comment d√©velopper votre propre plugin Terraform ?</a></p>]]></content>
    </entry>
</feed>